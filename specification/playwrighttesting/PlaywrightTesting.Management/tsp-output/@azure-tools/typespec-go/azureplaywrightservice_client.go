// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package typespec-go

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// AzurePlaywrightServiceClient - Microsoft.AzurePlaywrightService Resource Provider Management API.
// Don't use this type directly, use NewAzurePlaywrightServiceClient() instead.
type AzurePlaywrightServiceClient struct {
	internal *arm.Client
}

// NewAzurePlaywrightServiceClient creates a new instance of AzurePlaywrightServiceClient with the specified values.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewAzurePlaywrightServiceClient(credential azcore.TokenCredential, options *arm.ClientOptions) (*AzurePlaywrightServiceClient, error) {
	cl, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	client := &AzurePlaywrightServiceClient{
	internal: cl,
	}
	return client, nil
}

// NewAccountQuotasClient creates a new instance of [AccountQuotasClient].
func (client *AzurePlaywrightServiceClient) NewAccountQuotasClient() *AccountQuotasClient {
	return &AccountQuotasClient{
		internal: client.internal,
	}
}

// NewAccountsClient creates a new instance of [AccountsClient].
func (client *AzurePlaywrightServiceClient) NewAccountsClient() *AccountsClient {
	return &AccountsClient{
		internal: client.internal,
	}
}

// NewOperationsClient creates a new instance of [OperationsClient].
func (client *AzurePlaywrightServiceClient) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: client.internal,
	}
}

// NewQuotasClient creates a new instance of [QuotasClient].
func (client *AzurePlaywrightServiceClient) NewQuotasClient() *QuotasClient {
	return &QuotasClient{
		internal: client.internal,
	}
}

