// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armcommunication

// DistributionModeClassification provides polymorphic access to related types.
// Call the interface's GetDistributionMode() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *BestWorkerMode, *DistributionMode, *LongestIdleMode, *RoundRobinMode
type DistributionModeClassification interface {
	// GetDistributionMode returns the DistributionMode content of the underlying type.
	GetDistributionMode() *DistributionMode
}

// ExceptionActionClassification provides polymorphic access to related types.
// Call the interface's GetExceptionAction() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *CancelExceptionAction, *ExceptionAction, *ManualReclassifyExceptionAction, *ReclassifyExceptionAction
type ExceptionActionClassification interface {
	// GetExceptionAction returns the ExceptionAction content of the underlying type.
	GetExceptionAction() *ExceptionAction
}

// ExceptionTriggerClassification provides polymorphic access to related types.
// Call the interface's GetExceptionTrigger() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *ExceptionTrigger, *QueueLengthExceptionTrigger, *WaitTimeExceptionTrigger
type ExceptionTriggerClassification interface {
	// GetExceptionTrigger returns the ExceptionTrigger content of the underlying type.
	GetExceptionTrigger() *ExceptionTrigger
}

// JobMatchingModeClassification provides polymorphic access to related types.
// Call the interface's GetJobMatchingMode() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *JobMatchingMode, *QueueAndMatchMode, *ScheduleAndSuspendMode, *SuspendMode
type JobMatchingModeClassification interface {
	// GetJobMatchingMode returns the JobMatchingMode content of the underlying type.
	GetJobMatchingMode() *JobMatchingMode
}

// QueueSelectorAttachmentClassification provides polymorphic access to related types.
// Call the interface's GetQueueSelectorAttachment() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *ConditionalQueueSelectorAttachment, *PassThroughQueueSelectorAttachment, *QueueSelectorAttachment, *RuleEngineQueueSelectorAttachment,
// - *StaticQueueSelectorAttachment, *WeightedAllocationQueueSelectorAttachment
type QueueSelectorAttachmentClassification interface {
	// GetQueueSelectorAttachment returns the QueueSelectorAttachment content of the underlying type.
	GetQueueSelectorAttachment() *QueueSelectorAttachment
}

// RouterRuleClassification provides polymorphic access to related types.
// Call the interface's GetRouterRule() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *DirectMapRouterRule, *ExpressionRouterRule, *FunctionRouterRule, *RouterRule, *StaticRouterRule, *WebhookRouterRule
type RouterRuleClassification interface {
	// GetRouterRule returns the RouterRule content of the underlying type.
	GetRouterRule() *RouterRule
}

// WorkerSelectorAttachmentClassification provides polymorphic access to related types.
// Call the interface's GetWorkerSelectorAttachment() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *ConditionalWorkerSelectorAttachment, *PassThroughWorkerSelectorAttachment, *RuleEngineWorkerSelectorAttachment, *StaticWorkerSelectorAttachment,
// - *WeightedAllocationWorkerSelectorAttachment, *WorkerSelectorAttachment
type WorkerSelectorAttachmentClassification interface {
	// GetWorkerSelectorAttachment returns the WorkerSelectorAttachment content of the underlying type.
	GetWorkerSelectorAttachment() *WorkerSelectorAttachment
}

