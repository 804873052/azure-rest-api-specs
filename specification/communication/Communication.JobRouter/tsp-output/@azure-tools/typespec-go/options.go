// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package typespec-go

import "time"

// JobRouterAdministrationOperationsClientDeleteClassificationPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.DeleteClassificationPolicy
// method.
type JobRouterAdministrationOperationsClientDeleteClassificationPolicyOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientDeleteDistributionPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.DeleteDistributionPolicy
// method.
type JobRouterAdministrationOperationsClientDeleteDistributionPolicyOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientDeleteExceptionPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.DeleteExceptionPolicy
// method.
type JobRouterAdministrationOperationsClientDeleteExceptionPolicyOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientDeleteQueueOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.DeleteQueue
// method.
type JobRouterAdministrationOperationsClientDeleteQueueOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientGetClassificationPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.GetClassificationPolicy
// method.
type JobRouterAdministrationOperationsClientGetClassificationPolicyOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientGetDistributionPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.GetDistributionPolicy
// method.
type JobRouterAdministrationOperationsClientGetDistributionPolicyOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientGetExceptionPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.GetExceptionPolicy
// method.
type JobRouterAdministrationOperationsClientGetExceptionPolicyOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientGetQueueOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.GetQueue
// method.
type JobRouterAdministrationOperationsClientGetQueueOptions struct {
	// placeholder for future optional parameters
}

// JobRouterAdministrationOperationsClientListClassificationPoliciesOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.NewListClassificationPoliciesPager
// method.
type JobRouterAdministrationOperationsClientListClassificationPoliciesOptions struct {
	// Number of objects to return per page.
	Maxpagesize *int32
}

// JobRouterAdministrationOperationsClientListDistributionPoliciesOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.NewListDistributionPoliciesPager
// method.
type JobRouterAdministrationOperationsClientListDistributionPoliciesOptions struct {
	// Number of objects to return per page.
	Maxpagesize *int32
}

// JobRouterAdministrationOperationsClientListExceptionPoliciesOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.NewListExceptionPoliciesPager
// method.
type JobRouterAdministrationOperationsClientListExceptionPoliciesOptions struct {
	// Number of objects to return per page.
	Maxpagesize *int32
}

// JobRouterAdministrationOperationsClientListQueuesOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.NewListQueuesPager
// method.
type JobRouterAdministrationOperationsClientListQueuesOptions struct {
	// Number of objects to return per page.
	Maxpagesize *int32
}

// JobRouterAdministrationOperationsClientUpsertClassificationPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.UpsertClassificationPolicy
// method.
type JobRouterAdministrationOperationsClientUpsertClassificationPolicyOptions struct {
	// The request should only proceed if an entity matches this string.
	IfMatch *string

	// The request should only proceed if the entity was not modified after this time.
	IfUnmodifiedSince *time.Time
}

// JobRouterAdministrationOperationsClientUpsertDistributionPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.UpsertDistributionPolicy
// method.
type JobRouterAdministrationOperationsClientUpsertDistributionPolicyOptions struct {
	// The request should only proceed if an entity matches this string.
	IfMatch *string

	// The request should only proceed if the entity was not modified after this time.
	IfUnmodifiedSince *time.Time
}

// JobRouterAdministrationOperationsClientUpsertExceptionPolicyOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.UpsertExceptionPolicy
// method.
type JobRouterAdministrationOperationsClientUpsertExceptionPolicyOptions struct {
	// The request should only proceed if an entity matches this string.
	IfMatch *string

	// The request should only proceed if the entity was not modified after this time.
	IfUnmodifiedSince *time.Time
}

// JobRouterAdministrationOperationsClientUpsertQueueOptions contains the optional parameters for the JobRouterAdministrationOperationsClient.UpsertQueue
// method.
type JobRouterAdministrationOperationsClientUpsertQueueOptions struct {
	// The request should only proceed if an entity matches this string.
	IfMatch *string

	// The request should only proceed if the entity was not modified after this time.
	IfUnmodifiedSince *time.Time
}

// JobRouterOperationsClientAcceptJobOfferOptions contains the optional parameters for the JobRouterOperationsClient.AcceptJobOffer
// method.
type JobRouterOperationsClientAcceptJobOfferOptions struct {
	// placeholder for future optional parameters
}

// JobRouterOperationsClientCancelJobOptions contains the optional parameters for the JobRouterOperationsClient.CancelJob
// method.
type JobRouterOperationsClientCancelJobOptions struct {
	// Request model for cancelling job.
	Options *CancelJobOptions
}

// JobRouterOperationsClientCloseJobOptions contains the optional parameters for the JobRouterOperationsClient.CloseJob method.
type JobRouterOperationsClientCloseJobOptions struct {
	// Request model for closing job.
	Options *CloseJobOptions
}

// JobRouterOperationsClientCompleteJobOptions contains the optional parameters for the JobRouterOperationsClient.CompleteJob
// method.
type JobRouterOperationsClientCompleteJobOptions struct {
	// Request model for completing job.
	Options *CompleteJobOptions
}

// JobRouterOperationsClientDeclineJobOfferOptions contains the optional parameters for the JobRouterOperationsClient.DeclineJobOffer
// method.
type JobRouterOperationsClientDeclineJobOfferOptions struct {
	// Request model for declining offer.
	Options *DeclineJobOfferOptions
}

// JobRouterOperationsClientDeleteJobOptions contains the optional parameters for the JobRouterOperationsClient.DeleteJob
// method.
type JobRouterOperationsClientDeleteJobOptions struct {
	// placeholder for future optional parameters
}

// JobRouterOperationsClientDeleteWorkerOptions contains the optional parameters for the JobRouterOperationsClient.DeleteWorker
// method.
type JobRouterOperationsClientDeleteWorkerOptions struct {
	// placeholder for future optional parameters
}

// JobRouterOperationsClientGetInQueuePositionOptions contains the optional parameters for the JobRouterOperationsClient.GetInQueuePosition
// method.
type JobRouterOperationsClientGetInQueuePositionOptions struct {
	// placeholder for future optional parameters
}

// JobRouterOperationsClientGetJobOptions contains the optional parameters for the JobRouterOperationsClient.GetJob method.
type JobRouterOperationsClientGetJobOptions struct {
	// placeholder for future optional parameters
}

// JobRouterOperationsClientGetQueueStatisticsOptions contains the optional parameters for the JobRouterOperationsClient.GetQueueStatistics
// method.
type JobRouterOperationsClientGetQueueStatisticsOptions struct {
	// placeholder for future optional parameters
}

// JobRouterOperationsClientGetWorkerOptions contains the optional parameters for the JobRouterOperationsClient.GetWorker
// method.
type JobRouterOperationsClientGetWorkerOptions struct {
	// placeholder for future optional parameters
}

// JobRouterOperationsClientListJobsOptions contains the optional parameters for the JobRouterOperationsClient.NewListJobsPager
// method.
type JobRouterOperationsClientListJobsOptions struct {
	// If specified, filter jobs by channel.
	ChannelID *string

	// If specified, filter jobs by classificationPolicy.
	ClassificationPolicyID *string

	// Number of objects to return per page.
	Maxpagesize *int32

	// If specified, filter jobs by queue.
	QueueID *string

	// If specified, filter on jobs that was scheduled at or after given value. Range: [scheduledAfter, +Inf).
	ScheduledAfter *time.Time

	// If specified, filter on jobs that was scheduled before or at given timestamp. Range: (-Inf, scheduledBefore].
	ScheduledBefore *time.Time

	// If specified, filter jobs by status.
	Status *RouterJobStatusSelector
}

// JobRouterOperationsClientListWorkersOptions contains the optional parameters for the JobRouterOperationsClient.NewListWorkersPager
// method.
type JobRouterOperationsClientListWorkersOptions struct {
	// If specified, select workers who have a channel configuration with this channel.
	ChannelID *string

	// If set to true, select only workers who have capacity for the channel specified by `channelId` or for any channel if `channelId`
// not specified. If set to false, then will return all workers including workers without any capacity for jobs. Defaults
// to false.
	HasCapacity *bool

	// Number of objects to return per page.
	Maxpagesize *int32

	// If specified, select workers who are assigned to this queue.
	QueueID *string

	// If specified, select workers by worker state.
	State *RouterWorkerStateSelector
}

// JobRouterOperationsClientReclassifyJobOptions contains the optional parameters for the JobRouterOperationsClient.ReclassifyJob
// method.
type JobRouterOperationsClientReclassifyJobOptions struct {
	// Request object for reclassifying a job.
	Options *reclassifyJobOptions
}

// JobRouterOperationsClientUnassignJobOptions contains the optional parameters for the JobRouterOperationsClient.UnassignJob
// method.
type JobRouterOperationsClientUnassignJobOptions struct {
	// Request body for unassign route.
	Options *UnassignJobOptions
}

// JobRouterOperationsClientUpsertJobOptions contains the optional parameters for the JobRouterOperationsClient.UpsertJob
// method.
type JobRouterOperationsClientUpsertJobOptions struct {
	// The request should only proceed if an entity matches this string.
	IfMatch *string

	// The request should only proceed if the entity was not modified after this time.
	IfUnmodifiedSince *time.Time
}

// JobRouterOperationsClientUpsertWorkerOptions contains the optional parameters for the JobRouterOperationsClient.UpsertWorker
// method.
type JobRouterOperationsClientUpsertWorkerOptions struct {
	// The request should only proceed if an entity matches this string.
	IfMatch *string

	// The request should only proceed if the entity was not modified after this time.
	IfUnmodifiedSince *time.Time
}

