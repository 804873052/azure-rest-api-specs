// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package typespec-go

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// DatabaseWatcherClient contains the methods for the Microsoft.DatabaseWatcher namespace.
// Don't use this type directly, use NewDatabaseWatcherClient() instead.
type DatabaseWatcherClient struct {
	internal *arm.Client
}

// NewDatabaseWatcherClient creates a new instance of DatabaseWatcherClient with the specified values.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewDatabaseWatcherClient(credential azcore.TokenCredential, options *arm.ClientOptions) (*DatabaseWatcherClient, error) {
	cl, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	client := &DatabaseWatcherClient{
	internal: cl,
	}
	return client, nil
}

// NewOperationsClient creates a new instance of [OperationsClient].
func (client *DatabaseWatcherClient) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: client.internal,
	}
}

// NewSharedPrivateLinkResourcesClient creates a new instance of [SharedPrivateLinkResourcesClient].
func (client *DatabaseWatcherClient) NewSharedPrivateLinkResourcesClient() *SharedPrivateLinkResourcesClient {
	return &SharedPrivateLinkResourcesClient{
		internal: client.internal,
	}
}

// NewTargetsClient creates a new instance of [TargetsClient].
func (client *DatabaseWatcherClient) NewTargetsClient() *TargetsClient {
	return &TargetsClient{
		internal: client.internal,
	}
}

// NewWatchersClient creates a new instance of [WatchersClient].
func (client *DatabaseWatcherClient) NewWatchersClient() *WatchersClient {
	return &WatchersClient{
		internal: client.internal,
	}
}

