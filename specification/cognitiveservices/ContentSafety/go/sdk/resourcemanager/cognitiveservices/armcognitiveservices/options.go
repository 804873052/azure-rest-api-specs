// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armcognitiveservices

// ImageOperationsClientAnalyzeImageOptions contains the optional parameters for the ImageOperationsClient.AnalyzeImage method.
type ImageOperationsClientAnalyzeImageOptions struct {
	// placeholder for future optional parameters
}

// TextBlocklistsClientAddOrUpdateBlocklistItemsOptions contains the optional parameters for the TextBlocklistsClient.AddOrUpdateBlocklistItems
// method.
type TextBlocklistsClientAddOrUpdateBlocklistItemsOptions struct {
	// placeholder for future optional parameters
}

// TextBlocklistsClientCreateOrUpdateTextBlocklistOptions contains the optional parameters for the TextBlocklistsClient.CreateOrUpdateTextBlocklist
// method.
type TextBlocklistsClientCreateOrUpdateTextBlocklistOptions struct {
	// placeholder for future optional parameters
}

// TextBlocklistsClientDeleteTextBlocklistOptions contains the optional parameters for the TextBlocklistsClient.DeleteTextBlocklist
// method.
type TextBlocklistsClientDeleteTextBlocklistOptions struct {
	// placeholder for future optional parameters
}

// TextBlocklistsClientGetTextBlocklistItemOptions contains the optional parameters for the TextBlocklistsClient.GetTextBlocklistItem
// method.
type TextBlocklistsClientGetTextBlocklistItemOptions struct {
	// placeholder for future optional parameters
}

// TextBlocklistsClientGetTextBlocklistOptions contains the optional parameters for the TextBlocklistsClient.GetTextBlocklist
// method.
type TextBlocklistsClientGetTextBlocklistOptions struct {
	// placeholder for future optional parameters
}

// TextBlocklistsClientListTextBlocklistItemsOptions contains the optional parameters for the TextBlocklistsClient.NewListTextBlocklistItemsPager
// method.
type TextBlocklistsClientListTextBlocklistItemsOptions struct {
	// The maximum number of result items per page.
	Maxpagesize *int32

	// The number of result items to skip.
	Skip *int32

	// The number of result items to return.
	Top *int32
}

// TextBlocklistsClientListTextBlocklistsOptions contains the optional parameters for the TextBlocklistsClient.NewListTextBlocklistsPager
// method.
type TextBlocklistsClientListTextBlocklistsOptions struct {
	// placeholder for future optional parameters
}

// TextBlocklistsClientRemoveBlocklistItemsOptions contains the optional parameters for the TextBlocklistsClient.RemoveBlocklistItems
// method.
type TextBlocklistsClientRemoveBlocklistItemsOptions struct {
	// placeholder for future optional parameters
}

// TextGroundednessDetectionOperationsClientDetectGroundednessOptionsOptions contains the optional parameters for the TextGroundednessDetectionOperationsClient.DetectGroundednessOptions
// method.
type TextGroundednessDetectionOperationsClientDetectGroundednessOptionsOptions struct {
	// placeholder for future optional parameters
}

// TextOperationsClientAnalyzeTextOptions contains the optional parameters for the TextOperationsClient.AnalyzeText method.
type TextOperationsClientAnalyzeTextOptions struct {
	// placeholder for future optional parameters
}

// TextOperationsClientDetectTextJailbreakOptions contains the optional parameters for the TextOperationsClient.DetectTextJailbreak
// method.
type TextOperationsClientDetectTextJailbreakOptions struct {
	// placeholder for future optional parameters
}

// TextOperationsClientDetectTextPromptInjectionOptionsOptions contains the optional parameters for the TextOperationsClient.DetectTextPromptInjectionOptions
// method.
type TextOperationsClientDetectTextPromptInjectionOptionsOptions struct {
	// placeholder for future optional parameters
}

// TextOperationsClientDetectTextProtectedMaterialOptions contains the optional parameters for the TextOperationsClient.DetectTextProtectedMaterial
// method.
type TextOperationsClientDetectTextProtectedMaterialOptions struct {
	// placeholder for future optional parameters
}

