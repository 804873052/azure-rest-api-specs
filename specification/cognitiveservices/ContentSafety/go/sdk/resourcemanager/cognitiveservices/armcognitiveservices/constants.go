// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armcognitiveservices

// AnalyzeImageOutputType - The type of image analysis output.
type AnalyzeImageOutputType string

const (
	// AnalyzeImageOutputTypeFourSeverityLevels - Output severities in four levels, the value could be 0,2,4,6.
	AnalyzeImageOutputTypeFourSeverityLevels AnalyzeImageOutputType = "FourSeverityLevels"
)

// PossibleAnalyzeImageOutputTypeValues returns the possible values for the AnalyzeImageOutputType const type.
func PossibleAnalyzeImageOutputTypeValues() []AnalyzeImageOutputType {
	return []AnalyzeImageOutputType{	
		AnalyzeImageOutputTypeFourSeverityLevels,
	}
}

// AnalyzeTextOutputType - The type of text analysis output.
type AnalyzeTextOutputType string

const (
	// AnalyzeTextOutputTypeEightSeverityLevels - Output severities in eight levels, the value could be 0,1,2,3,4,5,6,7.
	AnalyzeTextOutputTypeEightSeverityLevels AnalyzeTextOutputType = "EightSeverityLevels"
	// AnalyzeTextOutputTypeFourSeverityLevels - Output severities in four levels, the value could be 0,2,4,6.
	AnalyzeTextOutputTypeFourSeverityLevels AnalyzeTextOutputType = "FourSeverityLevels"
)

// PossibleAnalyzeTextOutputTypeValues returns the possible values for the AnalyzeTextOutputType const type.
func PossibleAnalyzeTextOutputTypeValues() []AnalyzeTextOutputType {
	return []AnalyzeTextOutputType{	
		AnalyzeTextOutputTypeEightSeverityLevels,
		AnalyzeTextOutputTypeFourSeverityLevels,
	}
}

// GroundednessDomain - Groundedness Domain.
type GroundednessDomain string

const (
	GroundednessDomainGeneric GroundednessDomain = "Generic"
	GroundednessDomainMedical GroundednessDomain = "Medical"
)

// PossibleGroundednessDomainValues returns the possible values for the GroundednessDomain const type.
func PossibleGroundednessDomainValues() []GroundednessDomain {
	return []GroundednessDomain{	
		GroundednessDomainGeneric,
		GroundednessDomainMedical,
	}
}

// GroundednessTask - Groundedness Task type.
type GroundednessTask string

const (
	GroundednessTaskQnA GroundednessTask = "QnA"
	GroundednessTaskSummarization GroundednessTask = "Summarization"
)

// PossibleGroundednessTaskValues returns the possible values for the GroundednessTask const type.
func PossibleGroundednessTaskValues() []GroundednessTask {
	return []GroundednessTask{	
		GroundednessTaskQnA,
		GroundednessTaskSummarization,
	}
}

// ImageCategory - Image analyze category.
type ImageCategory string

const (
	ImageCategoryHate ImageCategory = "Hate"
	ImageCategorySelfHarm ImageCategory = "SelfHarm"
	ImageCategorySexual ImageCategory = "Sexual"
	ImageCategoryViolence ImageCategory = "Violence"
)

// PossibleImageCategoryValues returns the possible values for the ImageCategory const type.
func PossibleImageCategoryValues() []ImageCategory {
	return []ImageCategory{	
		ImageCategoryHate,
		ImageCategorySelfHarm,
		ImageCategorySexual,
		ImageCategoryViolence,
	}
}

// LLMResourceType - LLM resource type.
type LLMResourceType string

const (
	// LLMResourceTypeAzureOpenAI - Azure OpenAI resource type.
	LLMResourceTypeAzureOpenAI LLMResourceType = "AzureOpenAI"
)

// PossibleLLMResourceTypeValues returns the possible values for the LLMResourceType const type.
func PossibleLLMResourceTypeValues() []LLMResourceType {
	return []LLMResourceType{	
		LLMResourceTypeAzureOpenAI,
	}
}

// TextCategory - Text analyze category.
type TextCategory string

const (
	TextCategoryHate TextCategory = "Hate"
	TextCategorySelfHarm TextCategory = "SelfHarm"
	TextCategorySexual TextCategory = "Sexual"
	TextCategoryViolence TextCategory = "Violence"
)

// PossibleTextCategoryValues returns the possible values for the TextCategory const type.
func PossibleTextCategoryValues() []TextCategory {
	return []TextCategory{	
		TextCategoryHate,
		TextCategorySelfHarm,
		TextCategorySexual,
		TextCategoryViolence,
	}
}

